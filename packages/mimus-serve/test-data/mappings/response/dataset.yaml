---
name: Dataset ticket list response subset of properties
request:
  url: /datasets/tickets
  method: GET
response:
  status: 200
  dataset: tickets
  jsonataExpression: $ ~> | $ | {}, ['context', 'resolution', 'resolutionTimestamp'] |
---
name: Dataset one ticket by id
request:
  urlPathPattern: /datasets/tickets/.+
  method: GET
response:
  status: 200
  dataset: tickets
  jsonataExpression: $[ticketId=$request.pathSegments[2]]
---
name: Dataset PUT to modifiy existing ticket
request:
  urlPathPattern: /datasets/tickets/.+
  method: PUT
processing:
  - type: input
    dataset: tickets
    expression: $
  - type: match
    expression: $[ticketId=$request.pathSegments[2]]
  - type: store
    operation: replaceWithRequestBody
  - type: response
    output: currentData
response:
  status: 200
  jsonataExpression: $[ticketId=$request.pathSegments[2]]
---
name: Dataset DELETE to delete existing ticket
request:
  urlPathPattern: /datasets/tickets/.+
  method: DELETE
processing:
  - type: input
    dataset: tickets
    expression: $
  - type: match
    expression: $[ticketId=$request.pathSegments[2]]
  - type: store
    operation: deleteMatching
response:
  status: 200
  body: OK
---
name: Dataset PATCH to modify existing ticket
request:
  urlPathPattern: /datasets/tickets/.+
  method: PATCH
processing:
  - type: input
    dataset: tickets
    expression: $
  - type: match
    expression: $[ticketId=$request.pathSegments[2]]
  - type: store
    operation: mergeWithRequestBody
  - type: response
    output: currentData
response:
  status: 200
---
name: Dataset POST to add a ticket
request:
  url: /datasets/tickets
  method: POST
processing:
  - type: input
    dataset: tickets
    expression: $
  - type: transform
    input: requestBody
    expression: '$merge([$, {"ticketId": $uuid()}])'
  - type: store
    operation: insertRequestBody
  - type: response
    output: currentData
response:
  status: 200
